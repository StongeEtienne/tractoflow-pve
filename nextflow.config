process {
    publishDir = {"./results/$sid/$task.process"}
    scratch = true
    errorStrategy = { task.attempt <= 3 ? 'retry' : 'ignore' }
    maxRetries = 3
    maxErrors = -1
    stageInMode = 'copy'
    stageOutMode = 'rsync'
    tag = { "$sid" }
    afterScript = 'sleep 1'
}

params {
    //**Global options**//
        b0_thr_extract_b0=10
        dwi_shell_tolerance=20

    //**Preliminary DWI brain extraction**//
        bet_prelim_f=0.16
        dilate_b0_mask_prelim_brain_extraction=10

    //**Denoise dwi (dwidenoise in Mrtrix3)**//
        run_dwi_denoising=true
        extent=7

    //**Topup**//
        run_topup=true
        config_topup="b02b0.cnf"
        encoding_direction="y"
        dwell_time=0.062
        prefix_topup="topup_results"

    //**Eddy**//
        run_eddy=true
        eddy_cmd="eddy_openmp"
        bet_topup_before_eddy_f=0.16
        use_slice_drop_correction=true

    //**Final DWI BET**//
        bet_dwi_final_f=0.16
        dilate_b0_mask=1

    //**Brain mask dilate**//
        dilate_civet_mask=3
        dilate_fsl_mask=0

    //**Preprocess T1**//
        run_denoise_t1=false
        run_n4_t1=false

    //**Resample T1**//
        run_resample_t1=false
        t1_resolution=1
        t1_interpolation="lin"

    //**Resample T1**//
        run_ants_warp_t1=true

    //**Normalize DWI**//
        fa_mask_threshold=0.4

    //**Resample DWI**//
        run_resample_dwi=true
        dwi_resolution=1
        dwi_interpolation="lin"

    //**CIVET pft maps**//
        subcortical_gm_ratio=0.2

    //**Compute fiber response function (frf)**//
        fa=0.7
        min_fa=0.5
        min_nvox=300
        roi_radius=40
        set_frf=true
        manual_frf="15,4,4"

    //**Mean fiber response function (frf)**//
        mean_frf=false

    //**Compute fODF metrics**//
        sh_order=8
        basis="descoteaux07"
        fodf_metrics_a_factor=2.0
        relative_threshold=0.1
        max_fa_in_ventricle=0.1
        min_md_in_ventricle=0.003

    //**Seeding mask**//
        wm_seeding=false

    //**PFT tracking**//
        random=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]
        compress_streamlines=true
        algo="prob"
        seeding="nt"
        nbr_seeds=2000000
        step=0.2
        theta=20
        sfthres=0.1
        sfthres_init=0.5
        min_len=10
        max_len=300
        particles=15
        back=2
        front=1
        compress_value=0.2

    //**Number of processes per tasks**//
        processes_brain_extraction_t1=4
        processes_denoise_dwi=4
        processes_denoise_t1=4
        processes_eddy=1
        processes_fodf=4
        processes_registration=4

    //**Template T1 path**//
        template_t1="/human-data/mni_152_sym_09c/t1"

    //**Output directory**//
        output_dir=false

    //**Process control**//
        processes=false

    //**Default profiles switch**//
        params.brain_mask_only=false
        params.civet_pve=false
        params.fsl_pve=false

    Mean_FRF_Publish_Dir = "./results/Mean_FRF"
    Readme_Publish_Dir = "./results/Readme"
}


profiles {
    standard {
    }

    brain_mask_only {
        params.brain_mask_only=true
    }

    civet_pve {
        params.civet_pve=true
    }

    fsl_pve {
        params.fsl_pve=true
    }
}


env {
    ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=1
    MRTRIX_NTHREADS=1
    OMP_NUM_THREADS=1
    OPENBLAS_NUM_THREADS=1
}

if(params.output_dir) {
    process.publishDir = {"$params.output_dir/$sid/$task.process"}
    params.Mean_FRF_Publish_Dir = "${params.output_dir}/Mean_FRF"
    params.Readme_Publish_Dir = "${params.output_dir}/Readme"
}

if(params.processes) {
    if(params.processes > Runtime.runtime.availableProcessors()) {
        throw new RuntimeException("Number of processes higher than available CPUs.")
    }
    else if(params.processes < 1) {
        throw new RuntimeException("When set, number of processes must be >= 1 " +
                                   "and smaller or equal to the number of CPUs.")
    }
    else {
        executor.$local.cpus = params.processes
    }
}

singularity {
    runOptions='--nv'
}
